import { TermJson } from '../internal-types';
import { TermConfig } from './query-config';
import { RQuery } from '../types';
export declare const querySymbol: unique symbol;
export declare type RunnableRQuery = RQuery & {
    term: TermJson;
    [querySymbol]: true;
    run: () => any;
    getCursor: () => any;
    do: () => any;
};
export declare const isQuery: (query: unknown) => query is RunnableRQuery;
export declare function termBuilder([termType, termName, minArgs, maxArgs, optargType]: TermConfig, toQuery: (term: TermJson) => RunnableRQuery, currentTerm?: TermJson): (...args: any[]) => RunnableRQuery;
